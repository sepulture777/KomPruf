# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "Test" ] #this is the action for the test branch 
  pull_request:
    branches: [ "Test" ]

jobs:
  build:

    runs-on: ubuntu-latest #which os it is build for one can use multiple types and versions of os

    steps:
    - uses: actions/checkout@v3    #a standard actions function that checks out your files
    - name: Set up JDK 17           
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven    #here we build our pushed code as a maven project using our pom.xml
      run: mvn -B package --file pom.xml
      
    - name: Test Reporter #we add a test to our test branch to see if they pass or not
      uses: dorny/test-reporter@v1.6.0
      if: success() || failure()
      with:
        name: unit-tests
        path: target/surefire-reports/TEST-*.xml
        reporter: java-junit

 
